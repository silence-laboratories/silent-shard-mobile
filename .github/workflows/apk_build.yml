# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "CI/CD" ]
  pull_request:
    branches: [ "CI/CD" ]

jobs:
  build:
    runs-on: [silent-shard-mobile-builder]
    env: 
      MIX_PANEL_TOKEN: ${{ secrets.MIX_PANEL_TOKEN }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      KEY_PROP: ${{ secrets.KEY_PROPERTIES }}
      FIREBASE_DART: ${{ secrets.FIREBASE_DART }}
      GS_JSON: ${{ secrets.GS_JSON }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3' # Not needed with a .ruby-version file
          bundler-cache: true
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - uses: pocket-apps/action-setup-firebase@v2
        with:
          firebase-token: ${{ secrets.FIREBASE_TOKEN }}
      - run: echo MIX_PANEL_TOKEN=$MIX_PANEL_TOKEN > .env
      - run: echo  $KEY_PROP | base64  -d > ./android/key.properties
      - run: echo $FIREBASE_DART | base64  -d > lib/firebase_options.dart
      - run: echo $GS_JSON | base64 -d > android/app/google-services.json
      - run: dart pub global activate flutterfire_cli
      - run: gem install xcodeproj && export PATH="$PATH":"$HOME/.pub-cache/bin"
      - run: flutter pub get
      - run: |
          flutterfire configure  -y  \
          -p mobile-wallet-mm-snap \
          --platforms=android \ 
          -a com.mobile.wallet.mm.snap \
          -i com.mobile.wallet.mm.snap \ 
          -m com.mobile.wallet.mm.snap \ 
          --web-app-id com.mobile.wallet.mm.snap \
          --windows-app-id com.mobile.wallet.mm.snap
      - run: flutter build apk --release
      - run: cp -r build/app/outputs/flutter-apk/app-release.apk /builds/

          
          